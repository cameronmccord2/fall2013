<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-3.0.xsd"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util">

    <context:property-placeholder location="/WEB-INF/spring.properties"/>	
	<context:component-scan base-package="com.barryku.cloud.controller"></context:component-scan>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="useDefaultSuffixPattern" value="false" />	
	</bean>
	
 	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"><property name="order" value="0"/></bean>
 	    <bean id="internalResourceResolver"
        	class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
        <property name="order" value="1" />
    </bean>

<!-- Handling asset upload/download -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="maxUploadSize" value="5000000"/>
	</bean>
	
	
	<alias alias="repositoryService" name="${repositoryService}"/>
	
	<bean id="fileSystemRepositoryService" class="com.barryku.cloud.service.impl.RepositoryFileSystemImpl"/>
	
	<bean id="amazonS3RepositoryService" class="com.barryku.cloud.service.impl.RepositoryAmazonS3Impl">
		<constructor-arg>
			<bean class="com.amazonaws.services.s3.AmazonS3Client">
				<constructor-arg>
					<bean class="com.amazonaws.auth.BasicAWSCredentials">
						<constructor-arg value="${amazon.accessKey}"/>
						<constructor-arg value="${amazon.accessSecret}"/>
					</bean>
				</constructor-arg>
			</bean>
		</constructor-arg>
		<property name="bucket" value="${amazon.bucket}"/>	
	</bean>  
	
	<bean id="dropboxRepositoryService" class="com.barryku.cloud.service.impl.RepositoryDropboxImpl">
		<property name="client">
			<bean class="com.barryku.cloud.service.helper.DropboxClient">
				<property name="auth">
					<bean class="com.barryku.cloud.service.helper.Authenticator">
						<property name="token" value="${dropbox.consumerKey}"/>
						<property name="tokenSecret" value="${dropbox.consumerSecret}"/>			
						<property name="consumer">
							<bean class="oauth.signpost.basic.DefaultOAuthConsumer">
								<constructor-arg value="${dropbox.consumerKey}"/>
								<constructor-arg value="${dropbox.consumerSecret}"/>
							</bean>
						</property>
						<property name="provider">
							<bean class="oauth.signpost.basic.DefaultOAuthProvider">
								<constructor-arg value="${dropbox.requestTokenUrl}"/>
								<constructor-arg value="${dropbox.accessTokenUrl}"/>
								<constructor-arg value="${dropbox.authorizationUrl}"/>
							</bean>
						</property>
					</bean>
				</property>
				<property name="restUrl" value="https://${dropbox.contentServer}/"/>
				<property name="httpRestUrl" value="http://${dropbox.server}/"/>
				<property name="apiVersion" value="${dropbox.apiVersion}"/>
				<property name="userId" value="${dropbox.user}"/>
				<property name="userPassword" value="${dropbox.userPassword}"/>
			</bean>
		</property>
	</bean>	
	
	<bean id="credentials" class="org.apache.commons.httpclient.UsernamePasswordCredentials">
	  <constructor-arg value="${twilio.sid}" />
	  <constructor-arg value="${twilio.authToken}" />
	</bean>
	
	<bean id="twilioSmsConfig" class="com.barryku.cloud.controller.helper.TwilioSmsConfig">
		<property name="restUrl" value="${twilio.restUrl}/${twilio.sid}/SMS/Messages"/>
		<property name="fromNumber" value="${twilio.fromNumber}"/>
	</bean>
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
	  <constructor-arg>
	  	<bean class="org.springframework.http.client.CommonsClientHttpRequestFactory">
		  <constructor-arg>
		    <bean class="org.apache.commons.httpclient.HttpClient">
		      <constructor-arg>
		        <bean class="org.apache.commons.httpclient.params.HttpClientParams">
		          <property name="authenticationPreemptive" value="true" />
		          <property name="connectionManagerClass"
		          value="org.apache.commons.httpclient.MultiThreadedHttpConnectionManager" />
		        </bean>
		      </constructor-arg>
		    </bean>
		  </constructor-arg>	  	
	  	</bean>
	  </constructor-arg>
	  <property name="messageConverters">
	    <list>
	      <bean class="org.springframework.http.converter.FormHttpMessageConverter" />
	      <bean class="org.springframework.http.converter.StringHttpMessageConverter" >
	      	<property name = "supportedMediaTypes">
				<list>
					<value>text/plan</value>
					<value>application/xml</value>
				</list>
			</property>	      
	      </bean>
	    </list>
	  </property>
	</bean>	  
	
	<util:constant id="oauthVerb" static-field="org.scribe.model.Verb.POST"/>
	<bean id="twitterOAuth" class="org.scribe.oauth.OAuth10aServiceImpl">
		<constructor-arg>
			<bean class="org.scribe.services.HMACSha1SignatureService"/>
		</constructor-arg>
		<constructor-arg>
			<bean class="org.scribe.extractors.BaseStringExtractorImpl"/>
		</constructor-arg>
		<constructor-arg>
			<bean class="org.scribe.services.TimestampServiceImpl"/>
		</constructor-arg>
		<constructor-arg>
			<bean class="org.scribe.extractors.HeaderExtractorImpl"/>
		</constructor-arg>
		<constructor-arg>
			<bean class="org.scribe.extractors.TokenExtractorImpl"/>
		</constructor-arg>
		<constructor-arg>
			<bean class="org.scribe.extractors.TokenExtractorImpl"/>
		</constructor-arg>	
		<constructor-arg>
			<bean class="org.scribe.model.OAuthConfig">
				<property name="accessTokenEndpoint" value="${twitter.accessTokenEndpoint}"/>
				<property name="requestTokenEndpoint" value="${twitter.requestTokenEndpoint}"/>
				<property name="accessTokenVerb" value="#{oauthVerb}"/>
				<property name="requestTokenVerb" value="#{oauthVerb}"/>
				<property name="apiKey" value="${twitter.apiKey}"/>
				<property name="apiSecret" value="${twitter.apiSecret}"/>
				<property name="callback" value="${twitter.callback}"/>
			</bean>
		</constructor-arg>
	</bean>
</beans>